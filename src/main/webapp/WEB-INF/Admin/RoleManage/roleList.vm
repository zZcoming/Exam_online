<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>角色列表</title>

    <link href="/style/assets/css/bs3/dpl.css" rel="stylesheet">
    <link href="/style/assets/css/bs3/bui.css" rel="stylesheet">

</head>
<body>
<div class="demo-content">
    <div class="row">
        <div class="span24">
            <div id="grid">

            </div>
        </div>
    </div>


    <script src="/style/assets/js/jquery-1.8.1.min.js"></script>
    <script src="/style/assets/js/bui.js"></script>

    <!-- script start -->
    <script type="text/javascript">
        BUI.use(['bui/grid', 'bui/data'], function (Grid, Data) {
            var Grid = Grid,
                    Store = Data.Store,
                    columns = [
                        {title: '角色名', dataIndex: 'name', width: 100},
                        {id: '123', title: '权限', dataIndex: 'menu_ids', width: 100},

                        {
                            title: '操作', dataIndex: 'd', width: 200, renderer: function () {
                            return '<span><button class="button button-primary">修改</button> &nbsp;<button class="button button-danger">删除</button></span>'
                        }
                        }
                    ];

            /**
             * 自动发送的数据格式：
             *  1. start: 开始记录的起始数，如第 20 条,从0开始
             *  2. limit : 单页多少条记录
             *  3. pageIndex : 第几页，同start参数重复，可以选择其中一个使用
             *
             * 返回的数据格式：
             *  {
             *     "rows" : [{},{}], //数据集合
             *     "results" : 100, //记录总数
             *     "hasError" : false, //是否存在错误
             *     "error" : "" // 仅在 hasError : true 时使用
             *   }
             *
             */
            var store = new Store({
                        url: 'http://localhost:8080/roleList.htm',
                        autoLoad: true, //自动加载数据
                        params: { //配置初始请求的参数
                            a: 'a1',
                            b: 'b1'
                        },
                        pageSize: 3	// 配置分页数目
                    }),
                    grid = new Grid.Grid({
                        render: '#grid',
                        columns: columns,
                        loadMask: true, //加载数据时显示屏蔽层
                        store: store,
                        // 底部工具栏
                        bbar: {
                            // pagingBar:表明包含分页栏
                            pagingBar: true
                        }
                    });

            grid.render();
        });
    </script>
    <!-- script end -->
</div>
</body>
</html>